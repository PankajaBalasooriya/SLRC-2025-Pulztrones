#include "config.h"

//*** Robot state **********************************************//

volatile State RobotState = None;
//***************************************************************************//


const float ROBOT_RADIUS = 93.50;  // Adjust to your Robot specs - 93.25
const float DEG_PER_MM_DIFFERENCE = (180.0 / (2 * ROBOT_RADIUS * PI));
const float RADIANS_PER_DEGREE = 0.01746031746031746031746031746032;
const float DEGREES_PER_RADIAN = 57.295779513082320876798154814105;




//*** MOTION CONTROLLER CONSTANTS **********************************************//
const float LOOP_FREQUENCY = 50;
const float LOOP_INTERVAL = 0.02;

//need to adjust kp and kd values for required velocity and acceleration values
//const float FWD_KP = 0.005;// 0.045
//const float FWD_KD = 0.1;// 0.5

//const float ROT_KP = 0.017; //0.009
//const float ROT_KD = 0.1;

// Dynamic performance constants
// There is a video describing how to get these numbers and calculate the feedforward
// constants here: https://youtu.be/BrabDeHGsa0
const float FWD_KM = 977.54;  /// *
const float FWD_TM = 0.2569;  ///*0.00090 forward time constant 63%

const float ROT_KM = 595.55;  //* deg/s/Volt
const float ROT_TM = 0.1660;  ///* rotation time constant

const float SPEED_FF = (1.0 / FWD_KM);
const float ACC_FF = (FWD_TM / FWD_KM);
const float BIAS_FF = 0.1815884772; // *

// forward motion controller constants
const float FWD_ZETA = 0.707;
const float FWD_TD = FWD_TM;

const float FWD_KP = 16 * FWD_TM / (FWD_KM * FWD_ZETA * FWD_ZETA * FWD_TD * FWD_TD);
const float FWD_KD = LOOP_FREQUENCY * (8 * FWD_TM - FWD_TD) / (FWD_KM * FWD_TD);

// rotation motion controller constants
const float ROT_ZETA = 0.707;
const float ROT_TD = ROT_TM;

const float ROT_KP = 16 * ROT_TM / (ROT_KM * ROT_ZETA * ROT_ZETA * ROT_TD * ROT_TD);
const float ROT_KD = LOOP_FREQUENCY * (8 * ROT_TM - ROT_TD) / (ROT_KM * ROT_TD);


// controller constants for the steering controller
const float STEERING_KP = 0.0009;//0.003 // 0.001
const float STEERING_KD = 0.00001 ///0.00001
		;
const float STEERING_ADJUST_LIMIT = 0.6;  // deg/s

//***************************************************************************//


//***** PERFORMANCE CONSTANTS************************************************//
const int LINE_FOLLOW_SPEED = 100;
const int LINE_FOLLOW_ACCELERATION = 120;

const int FORWARD_SPEED_1 = 100;
const int FORWARD_ACCELERATION_1 = 120;

const int SPIN_TURN_OMEGA = 150;
const int SPIN_TURN_ALPHA = 50;




//***** SENSOR SCALING ******************************************************//
// This is the normalised value seen by the front sensor when the Robot is
// in its calibration position
const int SIDE_NOMINAL = 40;
const int FRONT_NOMINAL = 80;

// the values above which, a wall is seen
const int LEFT_THRESHOLD = 80;   // minimum value to register a wall
const int RIGHT_THRESHOLD = 80;  // minimum value to register a wall
const int FRONT_THRESHOLD = 100;  // minimum value to register a wall


//***** Robot constants ******************************************************//

const int MOTION_DELAY = 800;
const int DISTACE_TO_CENTER_OF_CELL = 150;





