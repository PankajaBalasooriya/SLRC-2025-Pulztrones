#ifndef TASKS_H
#define TASKS_H

#include <stdint.h>


// Task definitions
typedef enum {
    TASK_PLANTATION,
    TASK_MUDDY_ROAD,
    TASK_COLLECTION_POINT,
    TASK_OLD_WAREHOUSE,
    TASK_NEW_WAREHOUSE,
    TASK_OUTDOOR,
    TASK_NONE // No active task
} TaskType;

// Structure for task tracking
typedef struct {
    TaskType currentTask;   // Current active task
    uint8_t taskCompleted;     // Flag to indicate task completion
    uint8_t additionalData[2]; // Can store extra info (e.g., collected items)
} TaskStatus;

// Global task status instance
extern TaskStatus taskStatus;

// Function prototypes
void executePlantationTask(void);
void executeMuddyRoadTask(void);
void executeCollectionPointTask(void);
void executeOldWarehouseTask(void);
void executeNewWarehouseTask(void);
void executeOutdoorTask(void);

// Task manager functions
void runCurrentTask(TaskType task);
void updateTaskStatus(bool completed, uint8_t data);

#endif // TASKS_H
