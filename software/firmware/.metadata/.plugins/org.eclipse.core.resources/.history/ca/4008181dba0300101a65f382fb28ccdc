#ifndef SENSORS_H
#define SENSORS_H

#include "stm32f4xx_hal.h"
#include <math.h>
//#include "vl53l0x.h"
//#include "tofs.h"
#include "math.h"
//#include "irs.h"
#include "config.h"
#include "uartcom.h"
#include <stdio.h>
#include <string.h>

extern UART_HandleTypeDef huart6;

/* Enum for steering modes */
enum {
    STEER_NORMAL,
    STEER_LEFT_WALL,
    STEER_RIGHT_WALL,
    STEERING_OFF,
	STEERING_FRONT_WALL,
};

/* Start detection */
#define NO_START 0
#define LEFT_START 1
#define RIGHT_START 2

/* Sensor Channel Struct */
typedef struct {
	uint16_t raw;   // Raw ADC value
	int value; // Normalized/calibrated value
} SensorChannel;

/* Public Functions */
float get_front_sum();
int get_front_diff();
float get_steering_feedback();
float get_cross_track_error();
void init_sensor_value();
uint8_t is_wall_left();
uint8_t is_wall_right();
uint8_t is_wall_front();


//void Sensors_Enable();
//void Sensors_Disable();
//float Sensors_GetDistance(float sensor_value, float k);
void send_sensor_data();
float CalculateSteeringAdjustment();
void set_steering_mode(uint8_t mode);
void Sensors_Update();
uint8_t Sensors_WaitForUserStart();

/* Extern Variables */
extern volatile SensorChannel lfs, lss, lws, rss, rfs, rws, cfs;
extern volatile uint8_t see_front_wall, see_left_wall, see_right_wall;

#endif /* SENSORS_H */
