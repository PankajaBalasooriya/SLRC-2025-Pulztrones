/*
 * TCS3472.c
 *
 *  Created on: Apr 1, 2025
 *      Author: PANKAJA
 */


/* TCS3472 I2C Address */
#define TCS3472_ADDR                 (0x29 << 1)  // 7-bit address shifted left


/* Object color calibration thresholds */
struct {
    uint16_t white_min_c;

    /* Red color parameters */
    uint16_t red_min_ratio_r_to_g;  // (r/g)*100 ratio threshold
    uint16_t red_min_ratio_r_to_b;  // (r/b)*100 ratio threshold

    /* Blue color parameters */
    uint16_t blue_min_ratio_b_to_r;  // (b/r)*100 ratio threshold
    uint16_t blue_min_ratio_b_to_g;  // (b/g)*100 ratio threshold

    /* Yellow-Orange parameters */
    uint16_t yellow_min_ratio_r_to_b;  // (r/b)*100 ratio threshold
    uint16_t yellow_min_ratio_g_to_b;  // (g/b)*100 ratio threshold
    uint8_t yellow_r_g_diff_percent;   // How close r and g should be (as percentage)
} object_color_config = {
    .white_min_c = 5000,           // Minimum clear value for white

    .red_min_ratio_r_to_g = 150,   // R must be 1.5x greater than G
    .red_min_ratio_r_to_b = 150,   // R must be 1.5x greater than B

    .blue_min_ratio_b_to_r = 150,  // B must be 1.5x greater than R
    .blue_min_ratio_b_to_g = 120,  // B must be 1.2x greater than G

    .yellow_min_ratio_r_to_b = 150, // R must be 1.5x greater than B
    .yellow_min_ratio_g_to_b = 150, // G must be 1.5x greater than B
    .yellow_r_g_diff_percent = 80   // R and G must be within 20% of each other
};

